{"ast":null,"code":"import { toast } from \"react-hot-toast\";\nimport { setLoading, setToken } from \"../../slices/authSlice\";\nimport { resetCart } from \"../../slices/cartSlice\";\nimport { setUser } from \"../../slices/profileSlice\";\nimport { apiConnector } from \"../apiConnector\";\nimport { endpoints } from \"../apis\";\nconst {\n  SENDOTP_API,\n  SIGNUP_API,\n  LOGIN_API,\n  RESETPASSTOKEN_API,\n  RESETPASSWORD_API\n} = endpoints;\nexport function sendOtp(email, navigate) {\n  return async dispatch => {\n    const toastId = toast.loading(\"Loading...\");\n    dispatch(setLoading(true));\n    try {\n      const response = await apiConnector(\"POST\", SENDOTP_API, {\n        email,\n        checkUserPresent: true\n      });\n      console.log(\"SENDOTP API RESPONSE............\", response);\n      console.log(response.data.success);\n      if (!response.data.success) {\n        throw new Error(response.data.message);\n      }\n      toast.success(\"OTP Sent Successfully\");\n      navigate(\"/verify-email\");\n    } catch (error) {\n      console.log(\"SENDOTP API ERROR............\", error);\n      toast.error(\"Could Not Send OTP\");\n    }\n    dispatch(setLoading(false));\n    toast.dismiss(toastId);\n  };\n}\nexport function signUp(accountType, firstName, lastName, email, password, confirmPassword, otp, navigate) {\n  return async dispatch => {\n    const toastId = toast.loading(\"Loading...\");\n    dispatch(setLoading(true));\n    try {\n      const response = await apiConnector(\"POST\", SIGNUP_API, {\n        accountType,\n        firstName,\n        lastName,\n        email,\n        password,\n        confirmPassword,\n        otp\n      });\n      console.log(\"SIGNUP API RESPONSE............\", response);\n      if (!response.data.success) {\n        throw new Error(response.data.message);\n      }\n      toast.success(\"Signup Successful\");\n      navigate(\"/login\");\n    } catch (error) {\n      console.log(\"SIGNUP API ERROR............\", error);\n      toast.error(\"Signup Failed\");\n      navigate(\"/signup\");\n    }\n    dispatch(setLoading(false));\n    toast.dismiss(toastId);\n  };\n}\nexport function login(email, password, navigate) {\n  return async dispatch => {\n    const toastId = toast.loading(\"Loading...\");\n    dispatch(setLoading(true));\n    try {\n      var _response$data, _response$data$user;\n      const response = await apiConnector(\"POST\", LOGIN_API, {\n        email,\n        password\n      });\n      console.log(\"LOGIN API RESPONSE............\", response);\n      if (!response.data.success) {\n        throw new Error(response.data.message);\n      }\n      toast.success(\"Login Successful\");\n      dispatch(setToken(response.data.token));\n      const userImage = (_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$user = _response$data.user) !== null && _response$data$user !== void 0 && _response$data$user.image ? response.data.user.image : `https://api.dicebear.com/5.x/initials/svg?seed=${response.data.user.firstName} ${response.data.user.lastName}`;\n      dispatch(setUser({\n        ...response.data.user,\n        image: userImage\n      }));\n      localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n      navigate(\"/dashboard/my-profile\");\n    } catch (error) {\n      console.log(\"LOGIN API ERROR............\", error);\n      toast.error(\"Login Failed\");\n    }\n    dispatch(setLoading(false));\n    toast.dismiss(toastId);\n  };\n}\nexport function getPasswordResetToken(email, setEmailSent) {\n  return async dispatch => {\n    const toastId = toast.loading(\"Loading...\");\n    dispatch(setLoading(true));\n    try {\n      const response = await apiConnector(\"POST\", RESETPASSTOKEN_API, {\n        email\n      });\n      console.log(\"RESETPASSTOKEN RESPONSE............\", response);\n      if (!response.data.success) {\n        throw new Error(response.data.message);\n      }\n      toast.success(\"Reset Email Sent\");\n      setEmailSent(true);\n    } catch (error) {\n      console.log(\"RESETPASSTOKEN ERROR............\", error);\n      toast.error(\"Failed To Send Reset Email\");\n    }\n    toast.dismiss(toastId);\n    dispatch(setLoading(false));\n  };\n}\nexport function resetPassword(password, confirmPassword, token, navigate) {\n  return async dispatch => {\n    const toastId = toast.loading(\"Loading...\");\n    dispatch(setLoading(true));\n    try {\n      const response = await apiConnector(\"POST\", RESETPASSWORD_API, {\n        password,\n        confirmPassword,\n        token\n      });\n      console.log(\"RESETPASSWORD RESPONSE............\", response);\n      if (!response.data.success) {\n        throw new Error(response.data.message);\n      }\n      toast.success(\"Password Reset Successfully\");\n      navigate(\"/login\");\n    } catch (error) {\n      console.log(\"RESETPASSWORD ERROR............\", error);\n      toast.error(\"Failed To Reset Password\");\n    }\n    toast.dismiss(toastId);\n    dispatch(setLoading(false));\n  };\n}\nexport function logout(navigate) {\n  return dispatch => {\n    dispatch(setToken(null));\n    dispatch(setUser(null));\n    dispatch(resetCart());\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    toast.success(\"Logged Out\");\n    navigate(\"/\");\n  };\n}","map":{"version":3,"names":["toast","setLoading","setToken","resetCart","setUser","apiConnector","endpoints","SENDOTP_API","SIGNUP_API","LOGIN_API","RESETPASSTOKEN_API","RESETPASSWORD_API","sendOtp","email","navigate","dispatch","toastId","loading","response","checkUserPresent","console","log","data","success","Error","message","error","dismiss","signUp","accountType","firstName","lastName","password","confirmPassword","otp","login","_response$data","_response$data$user","token","userImage","user","image","localStorage","setItem","JSON","stringify","getPasswordResetToken","setEmailSent","resetPassword","logout","removeItem"],"sources":["/Users/roshan/Desktop/CodingWeb/src/services/operations/authAPI.js"],"sourcesContent":["import { toast } from \"react-hot-toast\"\r\n\r\nimport { setLoading, setToken } from \"../../slices/authSlice\"\r\nimport { resetCart } from \"../../slices/cartSlice\"\r\nimport { setUser } from \"../../slices/profileSlice\"\r\nimport { apiConnector } from \"../apiConnector\"\r\nimport { endpoints } from \"../apis\"\r\n\r\nconst {\r\n  SENDOTP_API,\r\n  SIGNUP_API,\r\n  LOGIN_API,\r\n  RESETPASSTOKEN_API,\r\n  RESETPASSWORD_API,\r\n} = endpoints\r\n\r\nexport function sendOtp(email, navigate) {\r\n  return async (dispatch) => {\r\n    const toastId = toast.loading(\"Loading...\")\r\n    dispatch(setLoading(true))\r\n    try {\r\n      const response = await apiConnector(\"POST\", SENDOTP_API, {\r\n        email,\r\n        checkUserPresent: true,\r\n      })\r\n      console.log(\"SENDOTP API RESPONSE............\", response)\r\n\r\n      console.log(response.data.success)\r\n\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message)\r\n      }\r\n\r\n      toast.success(\"OTP Sent Successfully\")\r\n      navigate(\"/verify-email\")\r\n    } catch (error) {\r\n      console.log(\"SENDOTP API ERROR............\", error)\r\n      toast.error(\"Could Not Send OTP\")\r\n    }\r\n    dispatch(setLoading(false))\r\n    toast.dismiss(toastId)\r\n  }\r\n}\r\n\r\nexport function signUp(\r\n  accountType,\r\n  firstName,\r\n  lastName,\r\n  email,\r\n  password,\r\n  confirmPassword,\r\n  otp,\r\n  navigate\r\n) {\r\n  return async (dispatch) => {\r\n    const toastId = toast.loading(\"Loading...\")\r\n    dispatch(setLoading(true))\r\n    try {\r\n      const response = await apiConnector(\"POST\", SIGNUP_API, {\r\n        accountType,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n        otp,\r\n      })\r\n\r\n      console.log(\"SIGNUP API RESPONSE............\", response)\r\n\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message)\r\n      }\r\n      toast.success(\"Signup Successful\")\r\n      navigate(\"/login\")\r\n    } catch (error) {\r\n      console.log(\"SIGNUP API ERROR............\", error)\r\n      toast.error(\"Signup Failed\")\r\n      navigate(\"/signup\")\r\n    }\r\n    dispatch(setLoading(false))\r\n    toast.dismiss(toastId)\r\n  }\r\n}\r\n\r\nexport function login(email, password, navigate) {\r\n  return async (dispatch) => {\r\n    const toastId = toast.loading(\"Loading...\")\r\n    dispatch(setLoading(true))\r\n    try {\r\n      const response = await apiConnector(\"POST\", LOGIN_API, {\r\n        email,\r\n        password,\r\n      })\r\n\r\n      console.log(\"LOGIN API RESPONSE............\", response)\r\n\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message)\r\n      }\r\n\r\n      toast.success(\"Login Successful\")\r\n      dispatch(setToken(response.data.token))\r\n      const userImage = response.data?.user?.image\r\n        ? response.data.user.image\r\n        : `https://api.dicebear.com/5.x/initials/svg?seed=${response.data.user.firstName} ${response.data.user.lastName}`\r\n      dispatch(setUser({ ...response.data.user, image: userImage }))\r\n      localStorage.setItem(\"token\", JSON.stringify(response.data.token))\r\n      navigate(\"/dashboard/my-profile\")\r\n    } catch (error) {\r\n      console.log(\"LOGIN API ERROR............\", error)\r\n      toast.error(\"Login Failed\")\r\n    }\r\n    dispatch(setLoading(false))\r\n    toast.dismiss(toastId)\r\n  }\r\n}\r\n\r\nexport function getPasswordResetToken(email, setEmailSent) {\r\n  return async (dispatch) => {\r\n    const toastId = toast.loading(\"Loading...\")\r\n    dispatch(setLoading(true))\r\n    try {\r\n      const response = await apiConnector(\"POST\", RESETPASSTOKEN_API, {\r\n        email,\r\n      })\r\n\r\n      console.log(\"RESETPASSTOKEN RESPONSE............\", response)\r\n\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message)\r\n      }\r\n\r\n      toast.success(\"Reset Email Sent\")\r\n      setEmailSent(true)\r\n    } catch (error) {\r\n      console.log(\"RESETPASSTOKEN ERROR............\", error)\r\n      toast.error(\"Failed To Send Reset Email\")\r\n    }\r\n    toast.dismiss(toastId)\r\n    dispatch(setLoading(false))\r\n  }\r\n}\r\n\r\nexport function resetPassword(password, confirmPassword, token, navigate) {\r\n  return async (dispatch) => {\r\n    const toastId = toast.loading(\"Loading...\")\r\n    dispatch(setLoading(true))\r\n    try {\r\n      const response = await apiConnector(\"POST\", RESETPASSWORD_API, {\r\n        password,\r\n        confirmPassword,\r\n        token,\r\n      })\r\n\r\n      console.log(\"RESETPASSWORD RESPONSE............\", response)\r\n\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message)\r\n      }\r\n\r\n      toast.success(\"Password Reset Successfully\")\r\n      navigate(\"/login\")\r\n    } catch (error) {\r\n      console.log(\"RESETPASSWORD ERROR............\", error)\r\n      toast.error(\"Failed To Reset Password\")\r\n    }\r\n    toast.dismiss(toastId)\r\n    dispatch(setLoading(false))\r\n  }\r\n}\r\n\r\nexport function logout(navigate) {\r\n  return (dispatch) => {\r\n    dispatch(setToken(null))\r\n    dispatch(setUser(null))\r\n    dispatch(resetCart())\r\n    localStorage.removeItem(\"token\")\r\n    localStorage.removeItem(\"user\")\r\n    toast.success(\"Logged Out\")\r\n    navigate(\"/\")\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}