{"ast":null,"code":"import { toast } from \"react-hot-toast\";\nimport rzpLogo from \"../../assets/Logo/rzp_logo.png\";\nimport { resetCart } from \"../../slices/cartSlice\";\nimport { setPaymentLoading } from \"../../slices/courseSlice\";\nimport { apiConnector } from \"../apiConnector\";\nimport { studentEndpoints } from \"../apis\";\nconst {\n  COURSE_PAYMENT_API,\n  COURSE_VERIFY_API,\n  SEND_PAYMENT_SUCCESS_EMAIL_API\n} = studentEndpoints;\n\n// Load the Razorpay SDK from the CDN\nfunction loadScript(src) {\n  return new Promise(resolve => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      resolve(false);\n    };\n    document.body.appendChild(script);\n  });\n}\n\n// Buy the Course\nexport async function BuyCourse(token, courses, user_details, navigate, dispatch) {\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    // Loading the script of Razorpay SDK\n    const res = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\n    if (!res) {\n      toast.error(\"Razorpay SDK failed to load. Check your Internet Connection.\");\n      return;\n    }\n\n    // Initiating the Order in Backend\n    const orderResponse = await apiConnector(\"POST\", COURSE_PAYMENT_API, {\n      courses\n    }, {\n      Authorization: `Bearer ${token}`\n    });\n    if (!orderResponse.data.success) {\n      throw new Error(orderResponse.data.message);\n    }\n    console.log(\"PAYMENT RESPONSE FROM BACKEND............\", orderResponse.data);\n\n    // Opening the Razorpay SDK\n    const options = {\n      key: process.env.RAZORPAY_KEY,\n      currency: orderResponse.data.data.currency,\n      amount: `${orderResponse.data.data.amount}`,\n      order_id: orderResponse.data.data.id,\n      name: \"StudyNotion\",\n      description: \"Thank you for Purchasing the Course.\",\n      image: rzpLogo,\n      prefill: {\n        name: `${user_details.firstName} ${user_details.lastName}`,\n        email: user_details.email\n      },\n      handler: function (response) {\n        sendPaymentSuccessEmail(response, orderResponse.data.data.amount, token);\n        verifyPayment({\n          ...response,\n          courses\n        }, token, navigate, dispatch);\n      }\n    };\n    const paymentObject = new window.Razorpay(options);\n    paymentObject.open();\n    paymentObject.on(\"payment.failed\", function (response) {\n      toast.error(\"Oops! Payment Failed.\");\n      console.log(response.error);\n    });\n  } catch (error) {\n    console.log(\"PAYMENT API ERROR............\", error);\n    toast.error(\"Could Not make Payment.\");\n  }\n  toast.dismiss(toastId);\n}\n\n// Verify the Payment\n_c = BuyCourse;\nasync function verifyPayment(bodyData, token, navigate, dispatch) {\n  const toastId = toast.loading(\"Verifying Payment...\");\n  dispatch(setPaymentLoading(true));\n  try {\n    const response = await apiConnector(\"POST\", COURSE_VERIFY_API, bodyData, {\n      Authorization: `Bearer ${token}`\n    });\n    console.log(\"VERIFY PAYMENT RESPONSE FROM BACKEND............\", response);\n    if (!response.data.success) {\n      throw new Error(response.data.message);\n    }\n    toast.success(\"Payment Successful. You are Added to the course \");\n    navigate(\"/dashboard/enrolled-courses\");\n    dispatch(resetCart());\n  } catch (error) {\n    console.log(\"PAYMENT VERIFY ERROR............\", error);\n    toast.error(\"Could Not Verify Payment.\");\n  }\n  toast.dismiss(toastId);\n  dispatch(setPaymentLoading(false));\n}\n\n// Send the Payment Success Email\nasync function sendPaymentSuccessEmail(response, amount, token) {\n  try {\n    await apiConnector(\"POST\", SEND_PAYMENT_SUCCESS_EMAIL_API, {\n      orderId: response.razorpay_order_id,\n      paymentId: response.razorpay_payment_id,\n      amount\n    }, {\n      Authorization: `Bearer ${token}`\n    });\n  } catch (error) {\n    console.log(\"PAYMENT SUCCESS EMAIL ERROR............\", error);\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"BuyCourse\");","map":{"version":3,"names":["toast","rzpLogo","resetCart","setPaymentLoading","apiConnector","studentEndpoints","COURSE_PAYMENT_API","COURSE_VERIFY_API","SEND_PAYMENT_SUCCESS_EMAIL_API","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","BuyCourse","token","courses","user_details","navigate","dispatch","toastId","loading","res","error","orderResponse","Authorization","data","success","Error","message","console","log","options","key","process","env","RAZORPAY_KEY","currency","amount","order_id","id","name","description","image","prefill","firstName","lastName","email","handler","response","sendPaymentSuccessEmail","verifyPayment","paymentObject","window","Razorpay","open","on","dismiss","_c","bodyData","orderId","razorpay_order_id","paymentId","razorpay_payment_id","$RefreshReg$"],"sources":["/Users/roshan/Desktop/CodingWeb/src/services/operations/studentFeaturesAPI.js"],"sourcesContent":["import { toast } from \"react-hot-toast\"\n\nimport rzpLogo from \"../../assets/Logo/rzp_logo.png\"\nimport { resetCart } from \"../../slices/cartSlice\"\nimport { setPaymentLoading } from \"../../slices/courseSlice\"\nimport { apiConnector } from \"../apiConnector\"\nimport { studentEndpoints } from \"../apis\"\n\nconst {\n  COURSE_PAYMENT_API,\n  COURSE_VERIFY_API,\n  SEND_PAYMENT_SUCCESS_EMAIL_API,\n} = studentEndpoints\n\n// Load the Razorpay SDK from the CDN\nfunction loadScript(src) {\n  return new Promise((resolve) => {\n    const script = document.createElement(\"script\")\n    script.src = src\n    script.onload = () => {\n      resolve(true)\n    }\n    script.onerror = () => {\n      resolve(false)\n    }\n    document.body.appendChild(script)\n  })\n}\n\n// Buy the Course\nexport async function BuyCourse(\n  token,\n  courses,\n  user_details,\n  navigate,\n  dispatch\n) {\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    // Loading the script of Razorpay SDK\n    const res = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\")\n\n    if (!res) {\n      toast.error(\n        \"Razorpay SDK failed to load. Check your Internet Connection.\"\n      )\n      return\n    }\n\n    // Initiating the Order in Backend\n    const orderResponse = await apiConnector(\n      \"POST\",\n      COURSE_PAYMENT_API,\n      {\n        courses,\n      },\n      {\n        Authorization: `Bearer ${token}`,\n      }\n    )\n\n    if (!orderResponse.data.success) {\n      throw new Error(orderResponse.data.message)\n    }\n    console.log(\"PAYMENT RESPONSE FROM BACKEND............\", orderResponse.data)\n\n    // Opening the Razorpay SDK\n    const options = {\n      key: process.env.RAZORPAY_KEY,\n      currency: orderResponse.data.data.currency,\n      amount: `${orderResponse.data.data.amount}`,\n      order_id: orderResponse.data.data.id,\n      name: \"StudyNotion\",\n      description: \"Thank you for Purchasing the Course.\",\n      image: rzpLogo,\n      prefill: {\n        name: `${user_details.firstName} ${user_details.lastName}`,\n        email: user_details.email,\n      },\n      handler: function (response) {\n        sendPaymentSuccessEmail(response, orderResponse.data.data.amount, token)\n        verifyPayment({ ...response, courses }, token, navigate, dispatch)\n      },\n    }\n    const paymentObject = new window.Razorpay(options)\n\n    paymentObject.open()\n    paymentObject.on(\"payment.failed\", function (response) {\n      toast.error(\"Oops! Payment Failed.\")\n      console.log(response.error)\n    })\n  } catch (error) {\n    console.log(\"PAYMENT API ERROR............\", error)\n    toast.error(\"Could Not make Payment.\")\n  }\n  toast.dismiss(toastId)\n}\n\n// Verify the Payment\nasync function verifyPayment(bodyData, token, navigate, dispatch) {\n  const toastId = toast.loading(\"Verifying Payment...\")\n  dispatch(setPaymentLoading(true))\n  try {\n    const response = await apiConnector(\"POST\", COURSE_VERIFY_API, bodyData, {\n      Authorization: `Bearer ${token}`,\n    })\n\n    console.log(\"VERIFY PAYMENT RESPONSE FROM BACKEND............\", response)\n\n    if (!response.data.success) {\n      throw new Error(response.data.message)\n    }\n\n    toast.success(\"Payment Successful. You are Added to the course \")\n    navigate(\"/dashboard/enrolled-courses\")\n    dispatch(resetCart())\n  } catch (error) {\n    console.log(\"PAYMENT VERIFY ERROR............\", error)\n    toast.error(\"Could Not Verify Payment.\")\n  }\n  toast.dismiss(toastId)\n  dispatch(setPaymentLoading(false))\n}\n\n// Send the Payment Success Email\nasync function sendPaymentSuccessEmail(response, amount, token) {\n  try {\n    await apiConnector(\n      \"POST\",\n      SEND_PAYMENT_SUCCESS_EMAIL_API,\n      {\n        orderId: response.razorpay_order_id,\n        paymentId: response.razorpay_payment_id,\n        amount,\n      },\n      {\n        Authorization: `Bearer ${token}`,\n      }\n    )\n  } catch (error) {\n    console.log(\"PAYMENT SUCCESS EMAIL ERROR............\", error)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}